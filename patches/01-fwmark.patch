diff --git a/src/net.h b/src/net.h
index a9becb61..e8868c0a 100644
--- a/src/net.h
+++ b/src/net.h
@@ -116,6 +116,7 @@ extern int keyexpires;
 extern int keylifetime;
 extern int udp_rcvbuf;
 extern int udp_sndbuf;
+extern int fwmark;
 extern bool do_prune;
 extern bool do_purge;
 extern char *myport;
diff --git a/src/net_setup.c b/src/net_setup.c
index 501fecd3..67a7c026 100644
--- a/src/net_setup.c
+++ b/src/net_setup.c
@@ -667,6 +667,13 @@ static bool setup_myself(void) {
 		}
 	}
 
+	if(get_config_int(lookup_config(config_tree, "FWMark"), &fwmark)) {
+		if(fwmark < 0) {
+			logger(LOG_ERR, "FWMark cannot be negative!");
+			return false;
+		}
+	}
+
 	if(get_config_int(lookup_config(config_tree, "ReplayWindow"), &replaywin_int)) {
 		if(replaywin_int < 0) {
 			logger(LOG_ERR, "ReplayWindow cannot be negative!");
diff --git a/src/net_socket.c b/src/net_socket.c
index 6195c16c..8404af4a 100644
--- a/src/net_socket.c
+++ b/src/net_socket.c
@@ -46,6 +46,7 @@ int maxtimeout = 900;
 int seconds_till_retry = 5;
 int udp_rcvbuf = 0;
 int udp_sndbuf = 0;
+int fwmark = 0;
 
 listen_socket_t listen_socket[MAXSOCKETS];
 int listen_sockets;
@@ -86,6 +87,10 @@ static void configure_tcp(connection_t *c) {
 	option = IPTOS_LOWDELAY;
 	setsockopt(c->socket, IPPROTO_IPV6, IPV6_TCLASS, (void *)&option, sizeof(option));
 #endif
+
+	if(fwmark) {
+		setsockopt(c->socket, SOL_SOCKET, SO_MARK, (void *)&fwmark, sizeof(fwmark));
+	}
 }
 
 static bool bind_to_interface(int sd) {
@@ -186,6 +191,10 @@ int setup_listen_socket(const sockaddr_t *sa) {
 		return -1;
 	}
 
+	if(fwmark) {
+		setsockopt(nfd, SOL_SOCKET, SO_MARK, (void *)&fwmark, sizeof(fwmark));
+	}
+
 	return nfd;
 }
 
@@ -297,6 +306,10 @@ int setup_vpn_in_socket(const sockaddr_t *sa) {
 		return -1;
 	}
 
+	if (fwmark) {
+		setsockopt(nfd, SOL_SOCKET, SO_MARK, (void *)&fwmark, sizeof(fwmark));
+	}
+
 	return nfd;
 } /* int setup_vpn_in_socket */
 
